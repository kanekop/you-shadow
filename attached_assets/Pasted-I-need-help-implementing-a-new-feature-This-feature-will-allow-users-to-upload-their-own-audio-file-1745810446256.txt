I need help implementing a new feature. This feature will allow users to upload their own audio files for shadowing practice. Please create a new endpoint and implement the following functionality:

**1. Preparation Phase:**

* **File Upload:** Implement a mechanism for users to upload their own audio files (e.g., MP3, M4A, WAV). Ensure appropriate handling for different audio formats if possible, or specify supported formats.
* **Transcription:** After a file is uploaded, use the existing OpenAI Whisper API integration (likely via `transcribe_utils.py` or similar) to transcribe the audio content into text. Store this text associated with the uploaded audio.
* **User Interface:** Create a simple UI section for this new feature, including a file upload button and a display area for the original audio player and the transcription (once ready).

**2. Shadowing Practice Phase:**

* **Start Recording:** Provide a "Start Recording & Play" button. When clicked:
    * The uploaded original audio should start playing.
    * Simultaneously, the user's microphone recording should begin (similar to the existing `audio-recorder.js` functionality).
* **Stop:** Provide a "Stop" button. When clicked:
    * Playback of the original audio should stop.
    * The user's microphone recording should stop.
* **Submit & Evaluate:** Provide a "Submit & Evaluate" button. When clicked:
    * The user's recorded audio should be sent for processing.
    * Reuse the existing WER calculation (`wer_utils.py`) and difference visualization (`diff_viewer.py`) functionality to compare the original transcription (from step 1) with the transcription of the user's recording.
    * Display the WER score and the diff view to the user, similar to other practice modes.

**Context:**

* The application is built with Flask.
* We are already using OpenAI Whisper for speech-to-text.
* WER calculation and diff visualization modules (`wer_utils.py`, `diff_viewer.py`) already exist.
* Audio recording functionality (`audio-recorder.js`) is likely already implemented for other features. Please leverage existing components where possible.
